grammar Ruletxt

Document  <- __ (Rule __)* %document
Rule      <- IfBlock / Assignment

Assignment <- '[OPM-conclusion]' __ attribute __ '=' __ Expression %assignment
IfBlock <- '[OPM-conclusion]' __ attribute __ 'if' __ Expression %if_block

Expression     <-  __ (OperatorExpression / BracketedOperatorExpression / date / attribute / string) __ %expression

OperatorExpression <- OPMLevel __ AllEtc? __ Expression OPMLevel? __ (Operator __ OPMLevel? Expression)+ %operator_expression

### Bracketed sections
# These are complicated due to the line headers. Example:
# [OPM-level3(]                   the client and/or partner do not have a letter confirming current receipt of a passporting benefit
# [OPM-level3]                    and
# [OPM-level3]                    the passported benefit being received is not Income Support
# [OPM-level2)]
BracketedOperatorExpression     <- AllEtc? __ OPMLevelUpToBrackets? "(" "]"? Expression OPMLevel? __ (Operator __ OPMLevel? Expression)+ __ OPMLevelUpToBrackets? ")" "]"? %bracketed_operator_expression
OPMLevel <- "[OPM-level" [\d] "]"
OPMLevelUpToBrackets <- "[OPM-level" [\d]

AllEtc  <- "all" / "both" / "any" / "either"
Operator <- "and" / "or"
string    <-  quote ("\\" . / notaquote)* quote %string
quote     <- ["“”]
notaquote <- [^"“”]
date      <- [\d]{4} "-" [\d]{2} "-" [\d]{2} %date
attribute <- [^ =<>"“”]+ %attribute
__        <-  [\s]*

