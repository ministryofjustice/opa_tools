grammar ruletxt
  
  Document       <- Whitespace* (Rule Whitespace)*
  Rule           <- Conclusion (Whitespace LevelLine)*
  Conclusion <- '[OPM-conclusion]' Whitespace (IfBlock / Assignment)

  IfBlock <- Attribute Whitespace 'if' Whitespace Expression %make_if
  Assignment <- Attribute '=' 'dummy'


#  LevelLine      <- '[OPM-level' Level ']' Whitespace LevelStatement
#  LevelStatement <-
#  Text             <- (!Whitespace .)+
  Level          <- [\d]+

  Expression  <- '(' ']'? Whitespace? Expression Whitespace? OPMLevelBeforeBrackets? ')' / AndExpression / Literal / Attribute
  AndExpression <- Expression ( WhitespaceAndOPMLevel 'and' WhitespaceAndOPMLevel Expression )+

#                             all
# [OPM-level3(]                   the client and/or partner do not have a letter confirming current receipt of a passporting benefit
# [OPM-level3]                    and
# [OPM-level3]                    the passported benefit being received is not Income Support
# [OPM-level2)]


#  Expression  <- OrExpression
#  OrExpression <- AndExpression (Or AndExpression)*
#  AndExpression <- NotExpression (And NotExpression)*
#  NotExpression <- Not? Primary
#  Primary    <- Number / Attribute / Group
#  Group      <- '(' Expression ')'
  Attribute  <- [a-zA-Z_]+
#  Or         <- 'or'
#  And        <- 'and'
#  Not        <- 'not'

  Whitespace       <- [ \t\r\n]+
  WhitespaceAndOPMLevel <- Whitespace OPMLevel? Whitespace
  OPMLevel <- "[OPM-level" [\d] "]"
  OPMLevelBeforeBrackets <- "[OPM-level" [\d]

### Primitives
  Literal    <- Number / Bool / String
  String    <-  '"' ("\\" . / [^"])* '"'
  Number     <- '-'? [\d]+
  Bool       <- 'true' / 'false'
